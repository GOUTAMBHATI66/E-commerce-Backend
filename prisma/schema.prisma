generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Category {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  description   String?
  parentId      String?    @map("parentId") @db.ObjectId
  parent        Category?  @relation("SubCategories", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  subcategories Category[] @relation("SubCategories")
  products      Product[]
}

model Seller {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String    @unique
  contact  String?
  googleId String    @unique
  products Product[]
}

model Product {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  price       Float
  slug        String  @unique //for the seo purpose

  totalQuantity   Int           @default(0)
  status          ProductStatus @default(active)
  isDeleted       Boolean       @default(false)
  isPublished     Boolean       @default(false)
  isFeatured      Boolean?      @default(false)
  discountPercent Float?
  // product variants

  variants Variant[]

  // Relations
  categoryId String   @db.ObjectId
  category   Category @relation(fields: [categoryId], references: [id])

  sellerId String @db.ObjectId
  seller   Seller @relation(fields: [sellerId], references: [id])

  // time and update
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([categoryId])
  @@index([sellerId])
}

// variant and attributes
model Variant {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  color      String // E.g., "Red", "Blue", etc.
  images     String[] // Images for this color
  attributes Attribute[]
  productId  String      @db.ObjectId
  product    Product     @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  @@index([productId])
}

model Attribute {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  size      String // E.g., "M", "L", "XL"
  stock     Int // Specific stock level for this size
  price     Float? // Optional: Overrides base price for this size
  sku       String? // Optional: SKU for inventory tracking
  variantId String  @db.ObjectId
  variant   Variant @relation(fields: [variantId], references: [id], onDelete: Cascade)

  @@index([variantId])
}

// Enum for product status
enum ProductStatus {
  active
  inactive
  out_of_stock
  discontinued
}
